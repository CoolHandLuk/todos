{"version":3,"sources":["components/Form/Form.js","components/Todo/Todo.js","components/TodoList/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","className","value","onChange","e","target","type","placeholder","onClick","preventDefault","text","completed","id","Math","random","alert","class","console","log","Todo","todo","filter","item","map","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","getLocalTodos","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b876a075.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = ({inputText, setInputText, todos, setTodos, setStatus})=> {\r\n    const inputHandler = (e)=> \r\n      setInputText(e.target.value);\r\n\r\n    const submitHandler = (e)=> {\r\n        \r\n        if(inputText !==''){\r\n            e.preventDefault();\r\n            setInputText('');\r\n            setTodos([...todos, {text:inputText, completed: false, id: Math.random()*1000}])\r\n        } else {\r\n            e.preventDefault();\r\n            setInputText('');\r\n            alert('wpisz treść zadania ;-)')\r\n        }\r\n       \r\n    }\r\n\r\n    const checkStatus = (e) => {\r\n        setStatus(e.target.value)\r\n        console.log(e.target.value)\r\n      };\r\n      \r\n    \r\n    return (\r\n        <>\r\n        <form className=\"form\">\r\n                <input className=\"form__input\" value={inputText} onChange={inputHandler} type=\"text\" placeholder=\"Wpisz swoje zadanie\"/>\r\n                <button className=\"form__button\" onClick={submitHandler}><i class=\"fas fa-plus-square\"></i></button>\r\n           <div className=\"custom-select\">\r\n            <select className=\"form__select\" onClick={checkStatus}>\r\n                <option className=\"form__select\" >Wszystkie</option>\r\n                <option className=\"form__select\" >Zrobione</option>\r\n                <option className=\"form__select\" >Niezrobione</option>\r\n            </select>\r\n            <span className=\"custom-arrow\"></span>\r\n            </div>\r\n        </form>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ({text, todo, todos, setTodos})=> {\r\n    const deleteTask =()=> {\r\n    setTodos(todos.filter(item=> todo.id !==item.id)\r\n    )\r\n    }\r\n\r\n    const doneTask = ()=> {\r\n        setTodos(\r\n            todos.map((item)=>{\r\n                if (todo.id===item.id){\r\n                    return{\r\n                        ...item, completed:!item.completed\r\n                    }\r\n                } else {\r\n                    return item;\r\n                }\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"tasks__element\">\r\n        <li className={`tasks__row ${todo.completed ? \"completed\" : \"\"}`}>\r\n        {text}\r\n        </li>\r\n        <button className=\"tasks__button-remove\" onClick={deleteTask}><i class=\"fas fa-trash\"></i></button>\r\n        <button className=\"tasks__button-confirm\" onClick={doneTask}><i class=\"fas fa-check\"></i></button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react'\r\nimport Todo from '../Todo/Todo'\r\n\r\nconst TodoList = ({text, todos, setTodos, filteredTodos })=> {\r\n    return (\r\n        <>\r\n            <div>\r\n                <ul className=\"tasks__list\">\r\n                    {filteredTodos.map((todo)=>\r\n                        <Todo \r\n                        text={todo.text} \r\n                        id= {todo.id}\r\n                        todos={todos}\r\n                        setTodos={setTodos}\r\n                        todo={todo}\r\n                        />\r\n                    )}\r\n                </ul>\r\n                \r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default TodoList;","import './App.scss';\nimport Form from './components/Form/Form';\nimport TodoList from './components/TodoList/TodoList'\nimport {useState, useEffect} from 'react';\n\nfunction App() {\nconst [inputText, setInputText] = useState();\nconst [todos, setTodos] = useState([]);\nconst [status, setStatus] = useState('Wszystkie');\nconst [filteredTodos, setFilteredTodos] = useState([]);\n\n\nconst filterHandler = () => {\n  switch (status) {\n    case \"Zrobione\":\n      setFilteredTodos(todos.filter((todo) => todo.completed === true));\n      break;\n    case \"Niezrobione\":\n      setFilteredTodos(todos.filter((todo) => todo.completed === false));\n      break;\n    default:\n      setFilteredTodos(todos);\n      break;\n  }\n};\nconst saveLocalTodos = () => {\n  localStorage.setItem(\"todos\", JSON.stringify(todos));\n};\n\nconst getLocalTodos = () => {\n  if (localStorage.getItem(\"todos\") === null) {\n    localStorage.setItem(\"todos\", JSON.stringify([]));\n  } else {\n    let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n    setTodos(todoLocal);\n  }\n};\n\nuseEffect(() => {\n  getLocalTodos();\n}, []);\n\nuseEffect(() => {\n  filterHandler();\n  saveLocalTodos();\n}, [todos, status]);\n\n  return (\n    <div className=\"App\">\n        <Form\n        inputText={inputText}\n        setInputText={setInputText}\n        todos={todos}\n        setTodos={setTodos}\n        setStatus={setStatus}\n        />\n        <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos ={filteredTodos}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}